//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplicationCarClient.CarServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/CarServiceModule")]
    [System.SerializableAttribute()]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnginCapacityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegNo {
            get {
                return this.RegNoField;
            }
            set {
                if ((object.ReferenceEquals(this.RegNoField, value) != true)) {
                    this.RegNoField = value;
                    this.RaisePropertyChanged("RegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ModelName {
            get {
                return this.ModelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNameField, value) != true)) {
                    this.ModelNameField = value;
                    this.RaisePropertyChanged("ModelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string EnginCapacity {
            get {
                return this.EnginCapacityField;
            }
            set {
                if ((object.ReferenceEquals(this.EnginCapacityField, value) != true)) {
                    this.EnginCapacityField = value;
                    this.RaisePropertyChanged("EnginCapacity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarServiceReference.ICarService")]
    public interface ICarService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCars", ReplyAction="http://tempuri.org/ICarService/GetCarsResponse")]
        System.Collections.Generic.List<WebApplicationCarClient.CarServiceReference.Car> GetCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCars", ReplyAction="http://tempuri.org/ICarService/GetCarsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebApplicationCarClient.CarServiceReference.Car>> GetCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCar", ReplyAction="http://tempuri.org/ICarService/GetCarResponse")]
        WebApplicationCarClient.CarServiceReference.Car GetCar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCar", ReplyAction="http://tempuri.org/ICarService/GetCarResponse")]
        System.Threading.Tasks.Task<WebApplicationCarClient.CarServiceReference.Car> GetCarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/SaveCar", ReplyAction="http://tempuri.org/ICarService/SaveCarResponse")]
        WebApplicationCarClient.CarServiceReference.Car SaveCar(WebApplicationCarClient.CarServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/SaveCar", ReplyAction="http://tempuri.org/ICarService/SaveCarResponse")]
        System.Threading.Tasks.Task<WebApplicationCarClient.CarServiceReference.Car> SaveCarAsync(WebApplicationCarClient.CarServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/UpdateCar", ReplyAction="http://tempuri.org/ICarService/UpdateCarResponse")]
        WebApplicationCarClient.CarServiceReference.Car UpdateCar(WebApplicationCarClient.CarServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/UpdateCar", ReplyAction="http://tempuri.org/ICarService/UpdateCarResponse")]
        System.Threading.Tasks.Task<WebApplicationCarClient.CarServiceReference.Car> UpdateCarAsync(WebApplicationCarClient.CarServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/DeleteCar", ReplyAction="http://tempuri.org/ICarService/DeleteCarResponse")]
        WebApplicationCarClient.CarServiceReference.Car DeleteCar(WebApplicationCarClient.CarServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/DeleteCar", ReplyAction="http://tempuri.org/ICarService/DeleteCarResponse")]
        System.Threading.Tasks.Task<WebApplicationCarClient.CarServiceReference.Car> DeleteCarAsync(WebApplicationCarClient.CarServiceReference.Car car);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarServiceChannel : WebApplicationCarClient.CarServiceReference.ICarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarServiceClient : System.ServiceModel.ClientBase<WebApplicationCarClient.CarServiceReference.ICarService>, WebApplicationCarClient.CarServiceReference.ICarService {
        
        public CarServiceClient() {
        }
        
        public CarServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<WebApplicationCarClient.CarServiceReference.Car> GetCars() {
            return base.Channel.GetCars();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebApplicationCarClient.CarServiceReference.Car>> GetCarsAsync() {
            return base.Channel.GetCarsAsync();
        }
        
        public WebApplicationCarClient.CarServiceReference.Car GetCar(int id) {
            return base.Channel.GetCar(id);
        }
        
        public System.Threading.Tasks.Task<WebApplicationCarClient.CarServiceReference.Car> GetCarAsync(int id) {
            return base.Channel.GetCarAsync(id);
        }
        
        public WebApplicationCarClient.CarServiceReference.Car SaveCar(WebApplicationCarClient.CarServiceReference.Car car) {
            return base.Channel.SaveCar(car);
        }
        
        public System.Threading.Tasks.Task<WebApplicationCarClient.CarServiceReference.Car> SaveCarAsync(WebApplicationCarClient.CarServiceReference.Car car) {
            return base.Channel.SaveCarAsync(car);
        }
        
        public WebApplicationCarClient.CarServiceReference.Car UpdateCar(WebApplicationCarClient.CarServiceReference.Car car) {
            return base.Channel.UpdateCar(car);
        }
        
        public System.Threading.Tasks.Task<WebApplicationCarClient.CarServiceReference.Car> UpdateCarAsync(WebApplicationCarClient.CarServiceReference.Car car) {
            return base.Channel.UpdateCarAsync(car);
        }
        
        public WebApplicationCarClient.CarServiceReference.Car DeleteCar(WebApplicationCarClient.CarServiceReference.Car car) {
            return base.Channel.DeleteCar(car);
        }
        
        public System.Threading.Tasks.Task<WebApplicationCarClient.CarServiceReference.Car> DeleteCarAsync(WebApplicationCarClient.CarServiceReference.Car car) {
            return base.Channel.DeleteCarAsync(car);
        }
    }
}
